#include <stdio.h>
//반환o 플러스
//int plus1(int num1, int num2)
//{
//	return num1 + num2;
//}
//
//int main(void) {
//	int num1 = 0, num2 = 0, num3=0;
//	scanf_s("%d %d", &num1, &num2);
//	num3=plus1(num1, num2);
//	printf("%d", num3);





//반환 x 플러스 ++손좀 봐야됨
//void plus1(, int num3)
//{
//  int num1, num2;
//	num3 = num1 + num2;
//	printf("%d", num3);
//
//}
//
//int main(void) {
//	int num1 = 0, num2 = 0, num3=0;
//	scanf_s("%d %d", &num1, &num2);
//	plus1(num1, num2, num3);

	// 99단
	//void gugu(int N)	
	//{
	//	int i = 1, j = 1 , temp=0;
	//	for (i ; i <= N; i++) {//1부터 n까지 
	//		for (j ; j <= 9; j++) {//n*9
	//			N*j;
	//			printf("%d * %d = %d\n", N, j, N*j);
	//		}
	//	}
	//}
	//int main(void) {
	//
	//int N=0;
	//scanf_s("%d", &N);
	//gugu(N);
	
	//함수로 hello 값을출력하세요
	/*void hello()
	{
		printf("hello");
	}

	int main(void) 
	{
		hello();
	}
	*/
  
  
  #include <stdio.h>
#include <string.h>
int mystrcmp(char a[10], char b[10]) 
{
	for(int i=0 ; i<=10 ; i++)
	{
		if(a[i] == b[i])
			
	}	
}

int main(void)
{
	char a[10], b[10];
	scanf_s("%s %s", a, b);
	mystrcmp(a, b);


	return 0;
}

strcat
strlen
strcmp
----------------------------------------------------------------------
#include <stdio.h>
#include <string.h>
//strcmp 포인터 x
//int mystrcmp(char a[10], char b[10])
//{
//	int i = 0;
//	for ( i ; i <= 10; i++)
//	{
//		if (a[i] != b[i])
//		{
//			return 0;
//		}
//		else if (a[i] == b[i])
//		{
//			if (a[i]=='\0' && b[i]=='\0')
//			{
//				return 1;
//			}
//		}
//	}
//}
//int main(void)
//{
//	char a[10], b[10];
//	scanf_s("%s %s", a, sizeof(a), b, sizeof(b));
//	printf("strcmp : %d\n", mystrcmp(a, b));
//	return 0;
//}


//strlen 포인터  x
//int mystrlen(char len[])
//{
//	int cnt = 0;
//	while(len[cnt] != '\0')
//	{
//		cnt++;
//	}
//	return cnt;
//}
//
//int main(void)
//{
//	char a[256];
//	scanf_s("%s", a, sizeof(a));
//	printf("strlen : %d\n", mystrlen(a));
//	return 0;
//}
//
//strcat 포인터 x

//char mystrcat(char a[256], char b[256])
//{
//	int cnt = 0;
//	int i = 0;
//	while(a[cnt] != '\0')
//	{
//		cnt++;
//	}     
//	return a;
//	if (a[cnt] == '\0') 
//		{
//			return b;
//	 	}
//}
//
//int main(void)
//{
//	char a[256], b[256];
//	printf("첫번쨰 문자열\n");
//	scanf_s("%s", a, sizeof(a));
//	printf("두번쨰 문자열\n");
//	scanf_s("%s", b, sizeof(b));
//	printf("strcat : %s\n", mystrcat(a, b));	
//	return 0;
//}




//strlen 포인터
//int mystrlen(char* len)
//{
//    int i = 0;	
//	while (len[i] != '\0')
//	{
//		i++;
//	}
//    return i;
//}
//int main(void)
//{
//	char a[256];
//	scanf_s("%s", a, sizeof(a));
//	printf("strlen : %d\n", mystrlen(a));
//	return 0;
//}




//strcmp 포인터

int mystrlen(char* len)
{
    int i = 0;	
	while (len[i] != '\0')
	{
		i++;
	}
    return i;
}
int mystrcmp(const char* a,const char* b)
{
	if(mystrlen(a) == mystrlen(b))
	{
		for(int i=0 ;  i<a[i] ; i++)
		{
			if (a[i] != b[i])
				return 0;
		}
		return 1;
	}
	return 0;
}
int main(void)
{
	char a[10], b[10];
	scanf_s("%s %s", a, sizeof(a), b, sizeof(b));
	printf("strcmp : %d\n", mystrcmp(a, b));
	return 0;
}
-------------------------------------
book book1;
	book1.id=10;
	printf("제목\n");
	scanf_s("%s", book1.bookname, sizeof(book1.bookname));
	printf("저자\n");
	scanf_s("%s", book1.bookmake, sizeof(book1.bookmake));
	printf("카테고리\n");
	scanf_s("%s", book1.bookka, sizeof(book1.bookka));
	printf("대출여부\n");
	scanf_s("%s", book1.boool, sizeof(book1.boool));
	printf("출판사\n");
	scanf_s("%s", book1.bookwhere, sizeof(book1.bookwhere));
	//
	printf("아이디 : %d\n", book1.id);
	printf("제목 : %s\n", book1.bookname);
	printf("저자 : %s\n", book1.bookmake);
	printf("출판사 : %s\n", book1.bookwhere);
	printf("대출여부 : %s\n", book1.boool);
	printf("카테고리 : %s\n", book1.bookka);
	
	----------------------------------------------------
	#include <stdio.h>
typedef struct _book
{
	char id; //아이디
	char bookname[256]; //책이름
	char bookmake[256]; //저자
	char bookka[256]; //카테고리
	char bookwhere[256];	//출판시
	char boool[256];	//대출여부
}book;
book createbook()
{
	char booklist;
	book book;
	printf("id\n");
	scanf_s("%s", book.id, sizeof(book.id));
	printf("제목\n");
	scanf_s("%s", book.bookname, sizeof(book.bookname));
	printf("저자\n");
	scanf_s("%s", book.bookmake, sizeof(book.bookmake));
	printf("카테고리\n");
	scanf_s("%s", book.bookka, sizeof(book.bookka));
	printf("대출여부\n");
	scanf_s("%s", book.boool, sizeof(book.boool));
	printf("출판사\n");
	scanf_s("%s", book.bookwhere, sizeof(book.bookwhere));

	printf("아이디 : %s\n", book.id);
	printf("제목 : %s\n", book.bookname);
	printf("저자 : %s\n", book.bookmake);
	printf("출판사 : %s\n", book.bookwhere);
	printf("대출여부 : %s\n", book.boool);
	printf("카테고리 : %s\n", book.bookka);
}
int main(void)
{
	book books[10];
	book book = createbook();
	books[0] = book;
	return 0;
}
//TODO는 무언가 내가 무엇을 만들었는지? 과거의 관례같은거다 자주쓰는듯 개발자들은

-----------------------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _book
{
	char id[256]; //아이디
	char bookname[256]; //책이름
	char bookmake[256]; //저자
	char kategorie[256]; //카테고리
	char bookwhere[256];	//출판시
	char boool[256];	//대출여부
}book;
book createbook()
{
	book book;
	printf("id\n");
	scanf_s("%s", book.id, sizeof(book.id));
	printf("제목\n");
	scanf_s("%s", book.bookname, sizeof(book.bookname));
	printf("저자\n");
	scanf_s("%s", book.bookmake, sizeof(book.bookmake));
	printf("카테고리\n");
	scanf_s("%s", book.kategorie, sizeof(book.kategorie));
	printf("대출여부\n");
	scanf_s("%s", book.boool, sizeof(book.boool));
	printf("출판사\n");
	scanf_s("%s", book.bookwhere, sizeof(book.bookwhere));
	
	return book;
}	
void printbook(book x)
{
	printf("%s\n", x.id);
	printf("%s\n", x.bookname);
	printf("%s\n", x.bookwhere);
	printf("%s\n", x.boool);
	printf("%s\n", x.kategorie);
	printf("%s\n", x.bookmake);
}
	int main(void)
{
	int a = 0, i = 1, k=0;
	book books[3];
	for (i ; i < 3 ; i++){
		{
			printf("책 정보를 입력하세요 %d번째 책\n", i);
			books[i] = createbook();
		}
	}
	while(1)
	{
		printf("무엇을 하겠습니까?\n");
		printf("0.종료 || 1.검색 || 2.삭제 || 3.변경 || 4.생성\n");
		scanf_s("%d", &a);
		if(a == 0)
		{
			printf("종료합니다\n");
			exit(0);
		}
		if(a == 1)
		{
			printf("몇번째 책을 검색하고 싶나요?\n");
			for (int j = 1; j < 3; j++) 
			{
				printf("책 제목 %d : %s\n", j, books[j].bookname);
			}
			scanf_s("%d", &i);
			switch(i)
			{
				
				case 1: 
				{
					printbook(books[i]);
					break;
				}
				case 2:
				{
					printbook(books[i]);
					break;
				}
				default:
				{
					printf("잘못된 정보입니다\n");
					break;
				}
			}
		}
		if (a == 2)
		{
			printf("몇번째 책을 삭제하고 싶나요\n");
			for (int j = 1; j < 3; j++)
			{
				printf("책 제목 %d : %s\n", j, books[j].bookname);
			}
			scanf_s("%d", &k);
			switch (k) 
			{

			}
		}
	}
	return 0;
}
-------------------------------------------------------------------------------
망한 라이브러리
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _book
{
	char id[256]; //아이디
	char bookname[256]; //책이름
	char bookmake[256]; //저자
	char kategorie[256]; //카테고리
	char bookwhere[256];	//출판시
	char boool[256];	//대출여부
	int del;
}book;
book createbook()
{
	book book;
	printf("id\n");
	scanf_s("%s", book.id, sizeof(book.id));
	printf("제목\n");
	scanf_s("%s", book.bookname, sizeof(book.bookname));
	printf("저자\n");
	scanf_s("%s", book.bookmake, sizeof(book.bookmake));
	printf("카테고리\n");
	scanf_s("%s", book.kategorie, sizeof(book.kategorie));
	printf("대출여부\n");
	scanf_s("%s", book.boool, sizeof(book.boool));
	printf("출판사\n");
	scanf_s("%s", book.bookwhere, sizeof(book.bookwhere));
	book.del = 1;
	return book;
}
void printbook(book x)
{
	/*if(x.del==0)
	{
		printf("삭제된 책 입니다\n");
		return;
	}*/
	printf("%s\n", x.id);
	printf("%s\n", x.bookname);
	printf("%s\n", x.bookwhere);
	printf("%s\n", x.boool);
	printf("%s\n", x.kategorie);
	printf("%s\n", x.bookmake);
}
void delbook(book x)
{
	/*x.del = 0;*/
	printf("삭제되었습니다\n");
}
book changebook(book *books[])
{
	book book;
	printf("id\n");
	scanf_s("%s", book.id, sizeof(book.id));
	printf("제목\n");
	scanf_s("%s", book.bookname, sizeof(book.bookname));
	printf("저자\n");
	scanf_s("%s", book.bookmake, sizeof(book.bookmake));
	printf("카테고리\n");
	scanf_s("%s", book.kategorie, sizeof(book.kategorie));
	printf("대출여부\n");
	scanf_s("%s", book.boool, sizeof(book.boool));
	printf("출판사\n");
	scanf_s("%s", book.bookwhere, sizeof(book.bookwhere));
	book.del = 1;
	return book;
}
int main(void)
{
	int a = 0, i = 1, k = 0, q = 0;
	book books[3];
	for (i; i < 3; i++) {
		{
			printf("책 정보를 입력하세요 %d번째 책\n", i);
			books[i] = createbook();
		}
	}
	while (1)
	{
		printf("무엇을 하겠습니까?\n");
		printf("0.종료 || 1.검색 || 2.삭제 || 3.변경 || 4.생성\n");
		scanf_s("%d", &a);
		if (a == 0)
		{
			printf("종료합니다\n");
			exit(0);
		}
		if (a == 1)
		{
			printf("몇번째 책을 검색하고 싶나요?\n");
			for (int j = 1; j < 3; j++)
			{
				printf("책 제목 %d : %s\n", j, books[j].bookname);
			}
			scanf_s("%d", &i);
			switch (i)
			{

			case 1:
			{
				if (books[i].del == 0)
				{
					printf("삭제된책입니다\n");
					break;
				}
				printbook(books[i]);
				break;
			}
			case 2:
			{
				if (books[i].del == 0)
				{
					printf("삭제된책입니다\n");
					break;
				}
				printbook(books[i]);
				break;
			}
			default:
			{
				printf("잘못된 정보입니다\n");
				break;
			}
			}
		}


		if (a == 2)
		{
			printf("몇번째 책을 삭제하고 싶나요\n");
			for (int j = 1; j < 3; j++)
			{
				printf("책 제목 %d : %s\n", j, books[j].bookname);
			}
			scanf_s("%d", &k);
			switch (k)
			{
				case 1 :
				{
					books[k].del = 0;
					delbook(books[k]);
					break;
				}
				case 2: 
				{
					books[k].del = 0;
					delbook(books[k]);
					break;
				}
				default:
				{
					printf("잘못된 정보입니다\n");
					break;
				}
			}
		}
		if(a == 3)
		{
			printf("몇번째 책을 변경하고 싶나요?\n");
			for (int j = 1; j < 3; j++)
			{
				printf("책 제목 %d : %s\n", j, books[j].bookname);
			}
			scanf_s("%d", &q);
			switch(q)
			{
				case 1:
				{
					if (books[k].del == 0)
					{
						printf("이미 삭제된 책입니다\n");
					}
					changebook(books[q]);
					break;
				}
				case 2:
				{
					if (books[k].del == 0)
					{
						printf("삭제된 책을 변경합니다\n");
					}
					printf("변경합니다\n");
					changebook(books[q]);
					break;
				}

				default:
				{
					printf("잘못된 정보입니다\n");
					break;
				}
			}
		}	
	}
	return 0; 
}
-----------------------------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _book
{
	char id[256]; //아이디
	char bookname[256]; //책이름
	char bookmake[256]; //저자
	char kategorie[256]; //카테고리
	char bookwhere[256];	//출판시
	char boool[256];	//대출여부
	int del;
}book;
book createbook()
{
	book book;
	printf("id\n");
	scanf_s("%s", book.id, sizeof(book.id));
	printf("제목\n");
	scanf_s("%s", book.bookname, sizeof(book.bookname));
	printf("저자\n");
	scanf_s("%s", book.bookmake, sizeof(book.bookmake));
	printf("카테고리\n");
	scanf_s("%s", book.kategorie, sizeof(book.kategorie));
	printf("대출여부\n");
	scanf_s("%s", book.boool, sizeof(book.boool));
	printf("출판사\n");
	scanf_s("%s", book.bookwhere, sizeof(book.bookwhere));
	book.del = 1;
	return book;
}


void printbook(book x)
{

	printf("id : %s\n", x.id);
	printf("이름 : %s\n", x.bookname);
	printf("출판사 : %s\n", x.bookwhere);
	printf("대출여부 : %s\n", x.boool);
	printf("카테고리 : %s\n", x.kategorie);
	printf("지은이 : %s\n", x.bookmake);
}
void  delbook(book x)
{
	
	x.del = 0;
	printbook(x);
	printf("삭제되었습니다\n");
}
//book changebook(book books[])
//{
//	book book;
//	printf("id\n");
//	scanf_s("%s", book.id, sizeof(book.id));
//	printf("제목\n");
//	scanf_s("%s", book.bookname, sizeof(book.bookname));
//	printf("저자\n");
//	scanf_s("%s", book.bookmake, sizeof(book.bookmake));
//	printf("카테고리\n");
//	scanf_s("%s", book.kategorie, sizeof(book.kategorie));
//	printf("대출여부\n");
//	scanf_s("%s", book.boool, sizeof(book.boool));
//	printf("출판사\n");
//	scanf_s("%s", book.bookwhere, sizeof(book.bookwhere));
//	book.del = 1;
//	return book;
//}


int main(void)
{
	int a = 0, k = 0, q = 0, N = 0;
	book *books[3];
	for (int i = 0 ; i < sizeof(books) ; i++) 
	{
		books[i]=malloc(sizeof(book));
	}
	for (int i = 1 ; i < 3; i++) {
		{
			printf("책 정보를 입력하세요 %d번째 책\n", i);
			*books[i]=createbook();
		}
	}
	/*while (1)
	{
		printf("무엇을 하겠습니까?\n");
		printf("0.종료 || 1.검색 || 2.삭제 || 3.변경 || 4.생성\n");
		scanf_s("%d", &a);
		if (a == 0)
		{
			printf("종료합니다\n");
			exit(0);
		}
		if (a == 1)
		{
			printf("몇번째 책을 검색하고 싶나요?\n");
			for (int j = 1; j < 3; j++)
			{
				printf("책 제목 %d : %s\n", j, books[j].bookname);
			}
			scanf_s("%d", &i);
			switch (i)
				{

				case 1:
				{
					if (books[i].del == 0)
					{
						printf("삭제된책입니다\n");
						break;
					} 
					printbook(books[i]);
					break;
				}
				case 2:
				{
					if (books[i].del == 0)
					{
						printf("삭제된책입니다\n");
						break;
					}
					printbook(books[i]);
					break;
				}
				default:
				{
					printf("잘못된 정보입니다\n");
					break;
				}
			}
		}*/


		/*if (a == 2)
		{
			printf("몇번째 책을 삭제하고 싶나요\n");
			for (int j = 1; j < 3; j++)
				{
					printf("책 제목 %d : %s\n", j, books[j].bookname);
				}
			scanf_s("%d", &k);
			switch (k)
				{
				case 1:
				{
					delbook(books[k]);
					break;
				}
				case 2:
				{
					delbook(books[k]);
					break;
				}
				default:
				{
					printf("잘못된 정보입니다\n");
					break;
				}
			}
		}*/
		//if (a == 3)
		//{
		//	printf("몇번째 책을 변경하고 싶나요?\n");
		//	for (int j = 1; j < 3; j++)
		//	{
		//		printf("책 제목 %d : %s\n", j, books[j].bookname);
		//	}
		//	scanf_s("%d", &q);
		//	switch (q)
		//	{
		//		case 1:
		//		{
		//			if (books[k].del == 0)
		//			{
		//				printf("이미 삭제된 책입니다\n");
		//			}
		//		//	changebook(books[q]);
		//			break;
		//		}
		//		case 2:
		//		{
		//			if (books[k].del == 0)
		//			{
		//				printf("삭제된 책을 변경합니다\n");
		//			}
		//			printf("변경합니다\n");
		//		//	changebook(books[q]);
		//			break;
		//		}
		//		default:
		//		{
		//			printf("잘못된 정보입니다\n");
		//			break;
		//		}
		//	}
		//}
	//}
	return 0;
}
------------------------------------------------------------------------------
새로짠거
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct _BOOK
{
	char id[256]; //아이디
	char bookname[256]; //책이름
	char bookmake[256]; //저자
	char kategorie[256]; //카테고리
	char bookwhere[256];	//출판시
	char boool[256];	//대출여부
	int del;
}BOOK;
void creatbook(BOOK *booklist, int *total)
{
	printf("id\n");
	scanf_s("%s", booklist[*total].id, sizeof(booklist[*total].id));
	printf("제목\n");
	scanf_s("%s", booklist[*total].bookname, sizeof(booklist[*total].bookname));
	printf("저자\n");
	scanf_s("%s", booklist[*total].bookmake, sizeof(booklist[*total].bookmake));
	printf("카테고리\n");
	scanf_s("%s", booklist[*total].kategorie, sizeof(booklist[*total].kategorie));
	printf("대출여부\n");
	scanf_s("%s", booklist[*total].boool, sizeof(booklist[*total].boool));
	printf("출판사\n");
	scanf_s("%s", booklist[*total].bookwhere, sizeof(booklist[*total].bookwhere));
	booklist[*total].del = 0;
	*total+=1;
}
void searchbook(BOOK *booklist, int total, int N)
{
	for (int i=0 ; i<N ; i++) 
	{
		printf("검색할 책의 제목 : %s\n", booklist->bookname);
	}
}
int main()
{
	int N = 0, total=0;
	BOOK* booklist;
	printf("도서관이 가질수있는 최대 책 갯수를 입력해주세요\n");
	scanf_s("%d", &N);
	booklist = malloc(sizeof(BOOK) * N);
	while(1)
	{
		printf("무엇을 하시겠습니까?\n");
		printf("1.책 추가하기\n");
		printf("2.책 검색하기\n");
		printf("3.책 변경하기\n");
		printf("4.책 삭제하기\n");
		printf("5.종료하기\n");
		scanf_s("%d", &N);
		if(N==1)
		{
			creatbook(booklist, &total);
		}
		if(N==2)
		{
			searchbook(booklist, total, N);
		}
	}
	return 0;
}
-----------------------------------------------------------------------------------------------------------

#include <stdio.h>//스탠다드 인풋아웃풋
#include <stdlib.h>//스탠다드 라이브러리 추가?함수받는건데 기억안남
#include <string.h>//스탠다드 ? cmp,len사용하기위해

typedef struct _Book {
	int id;
	char* name;
}Book; //구조체 선언 정수로 아이디 선언
		//문자열 포인터 이름선언

#define SIZE 10 //1.배열에 넣을 상수값 전처리기로 넣음 2.Book books[size]를 전역변수로 쓰기위해서?
#define STR_MAX_SIZE 20 //문자열 배열 길이

int BookIndex = 0;//전역변수?
Book* books[SIZE]; //전역변수?

void Menu() {
	printf("================\n");
	printf("1 : insertBook\n");
	printf("2 : printBook\n");
	printf("3 : searchBook\n");
	printf("4 : updateBook\n");
	printf("5 : deleteBook\n");
	printf("6 : exit\n");
	printf("================\n");
}//기본적인 메뉴 인터페이스?

char* inputStr(char* printStr) { //매개변수?에 있는 문자열 포인터로 가져와서
	getch();//엔터를 넘기는데 씀 아마도 쓸대없는 엔터 받을바에는 스킵하는 용도로 쓰인거 같음
	printf("%s", printStr);//위에 문자열 포인터가져와서 프린트
	char inputStr[STR_MAX_SIZE];//문자열 받을수있는 최대길이
	scanf_s("%s", inputStr, STR_MAX_SIZE);

	int strLen = strlen(inputStr) + 1;//아마 NULL값을 스캔받기위해 쓴거일듯?strcpy에서 복사할 원본문자열에 무조건 널값이 들어가야함
	char* str = malloc(strLen);//
	strcpy_s(str, strLen, inputStr);// 
	//sizeof는 앞에 선언을 했기에 안씀
	return str;//문자열 반환
}//전체적인 흐름은 문자열을 입력받고 반환하는것

int inputNumber(char* printStr) { //위에랑 똑같이 매개변수?인자값? 뭐라고해야하지 쩄든 ()안에있는 문자열 출력 아마 썜이 최대한 줄일려고 이런 장치를 건게 아닐까 
	printf("%s", printStr); //그..뭐라해야하지 매개변수를 출력해줌 예시로 스우치안에있는 저걸 보면 된다
	int inputNum = 0;//선언
	scanf_s("%d", &inputNum);//입력
	return inputNum;//반환
}
//전체적인 흐름은 숫자를 입력받고 반환하는것 다른함수 참조할떄 쓰임

void insertBook() {
	Book* book = malloc(sizeof(Book));

	book->id = inputNumber("create book id");
	book->name = inputStr("create book name");

	books[BookIndex++] = book;
}
//전체적인 흐름은 책을 만들고 반환하는 역할
void PrintBook(Book* book) {
	printf("print book id : %d\n", book->id);
	printf("print book name : %s\n", book->name);
}
//전체적인 흐름은 프린트해주는거 그것말곤...아마 다른곳에 함수호출하기위한 그런 프린트
void PrintBooks() {
	for (int i = 0; i < BookIndex; i++)
		PrintBook(books[i]);
}
//전체적인 흐름은 프린트인데 모든책 프린트 하는거일듯?
Book* SearchBook(char* str) {
	int menuNum/*1번이냐 2번이냐 */ = inputNumber(str);

	int searchNumber = 0;
	char* searchName = 0;

	for (int i = 0; i < BookIndex; i++) {
		Book* book = books[i];
		if (menuNum == 1) {
			if (searchNumber == 0)
				searchNumber = inputNumber("search id number");

			if (book->id == searchNumber)
				return book;
		}
		else {//menuNum 2
			if (searchNumber == 0)
				searchNumber = inputStr("search id str");

			if (!strcmp(book->name, searchName))//0이 아니라면 즉 둘이 비교해서 
				return book;
		}
	}
	return 0;
}
//전체적인 흐름은 
Book* GetBook(char* str) {
	Book* book = SearchBook(str);
	PrintBook(book);

	return book;
}
//전체적인 흐름은 다른 함수에 호출되는 용도
void UpdateBook() {
	Book* book = GetBook("update 1 = id 2 = name");

	book->id = inputNumber("update id");
	free(book->name);//이름 메모리 해제
	book->name = inputStr("update Name");
}
//전체적인 흐름은 메모리 메모리 
void DeleteBook() {
	Book* book = GetBook("delete 1 = id 2 = name");
	free(book); // book 메모리 해제
}
//전체적인 흐름은 메모리 할당을 해제해서 책을 삭제시키는것
int main() {
	while (1) {
		Menu();//메뉴 함수 호출
		switch (inputNumber("insertNum : ")) {
		case 1: insertBook(); break; //책 만들기
		case 2: PrintBooks(); break; //모든 책 내용 보여주기
		case 3: PrintBook(SearchBook("search 1 = id 2 = name")); break;//원하는 책 찾아서 검색하기
		case 4: UpdateBook(); break;//책 내용 바꾸기?
		case 5: DeleteBook(); break;//책 삭제하기
		}
	}
	return 0;
}
